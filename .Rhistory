dados_limpos <- lista_dados_limpos[[codigo]]
dados_chirps <- lista_dados_CHIRPS[[codigo]]
# Unir os dois dataframes pelo mês
dados_combinados <- merge(dados_limpos, dados_chirps, by = "mes", suffixes = c("_limpos", "_CHIRPS"))
# Calcular as métricas
obs <- dados_combinados$precip_total_mensal_limpos
sim <- dados_combinados$precip_total_mensal_CHIRPS
ME_val <- mean(obs - sim, na.rm = TRUE)
MAE_val <- mae(sim, obs, na.rm = TRUE)
RMSE_val <- rmse(sim, obs, na.rm = TRUE)
PBIAS_val <- pbias(sim, obs, na.rm = TRUE)
NSE_val <- NSE(sim, obs, na.rm = TRUE)
r_val <- cor(obs, sim, use = "complete.obs")
R2_val <- r_val^2
KGE_val <- KGE_calculator(obs, sim)
# Adicionar os resultados ao dataframe
resultados_metricas <- rbind(resultados_metricas,
data.frame(codigo_OMM = codigo, ME = ME_val, MAE = MAE_val, RMSE = RMSE_val,
PBIAS = PBIAS_val, NSE = NSE_val, r = r_val, R2 = R2_val, KGE = KGE_val))
}
}
# Loop para calcular as métricas para cada estação
for (codigo in names(lista_dados_limpos$OMM)) {
# Verificar se a estação está nas duas listas
if (codigo %in% names(lista_dados_CHIRPS)) {
# Extrair os dados para a estação
dados_limpos <- lista_dados_limpos[[codigo]]
dados_chirps <- lista_dados_CHIRPS[[codigo]]
# Unir os dois dataframes pelo mês
dados_combinados <- merge(dados_limpos, dados_chirps, by = "mes", suffixes = c("_limpos", "_CHIRPS"))
# Calcular as métricas
obs <- dados_combinados$precip_total_mensal_limpos
sim <- dados_combinados$precip_total_mensal_CHIRPS
ME_val <- mean(obs - sim, na.rm = TRUE)
MAE_val <- mae(sim, obs, na.rm = TRUE)
RMSE_val <- rmse(sim, obs, na.rm = TRUE)
PBIAS_val <- pbias(sim, obs, na.rm = TRUE)
NSE_val <- NSE(sim, obs, na.rm = TRUE)
r_val <- cor(obs, sim, use = "complete.obs")
R2_val <- r_val^2
KGE_val <- KGE_calculator(obs, sim)
# Adicionar os resultados ao dataframe
resultados_metricas <- rbind(resultados_metricas,
data.frame(codigo_OMM = codigo, ME = ME_val, MAE = MAE_val, RMSE = RMSE_val,
PBIAS = PBIAS_val, NSE = NSE_val, r = r_val, R2 = R2_val, KGE = KGE_val))
}
}
View(resultados_metricas)
# Loop para calcular as métricas para cada estação
for (codigo in names(lista_dados_limpos)) {
# Verificar se a estação está nas duas listas
if (codigo %in% names(lista_dados_CHIRPS)) {
# Extrair os dados para a estação
dados_limpos <- lista_dados_limpos[[codigo]]
dados_chirps <- lista_dados_CHIRPS[[codigo]]
# Unir os dois dataframes pelo mês
dados_combinados <- merge(dados_limpos, dados_chirps, by = "mes", suffixes = c("_limpos", "_CHIRPS"))
# Calcular as métricas
obs <- dados_combinados$precip_total_mensal_limpos
sim <- dados_combinados$precip_total_mensal_CHIRPS
ME_val <- mean(obs - sim, na.rm = TRUE)
MAE_val <- mae(sim, obs, na.rm = TRUE)
RMSE_val <- rmse(sim, obs, na.rm = TRUE)
PBIAS_val <- pbias(sim, obs, na.rm = TRUE)
NSE_val <- NSE(sim, obs, na.rm = TRUE)
r_val <- cor(obs, sim, use = "complete.obs")
R2_val <- r_val^2
KGE_val <- KGE_calculator(obs, sim)
# Adicionar os resultados ao dataframe
resultados_metricas <- rbind(resultados_metricas,
data.frame(codigo_OMM = codigo, ME = ME_val, MAE = MAE_val, RMSE = RMSE_val,
PBIAS = PBIAS_val, NSE = NSE_val, r = r_val, R2 = R2_val, KGE = KGE_val))
}
}
# Loop para calcular as métricas para cada estação
for (codigo in names(lista_dados_limpos)) {
# Verificar se a estação está nas duas listas
if (codigo %in% names(lista_dados_CHIRPS)) {
# Extrair os dados para a estação
dados_limpos <- lista_dados_limpos[[codigo]]
dados_chirps <- lista_dados_CHIRPS[[codigo]]
# Unir os dois dataframes pelo mês
dados_combinados <- merge(dados_limpos, dados_chirps, by = "mes", suffixes = c("_limpos", "_CHIRPS"))
# Calcular as métricas
obs <- as.numeric(dados_combinados$precip_total_mensal_limpos)
sim <- as.numeric(dados_combinados$precip_total_mensal_CHIRPS)
ME_val <- mean(obs - sim, na.rm = TRUE)
MAE_val <- mae(sim, obs, na.rm = TRUE)
RMSE_val <- rmse(sim, obs, na.rm = TRUE)
PBIAS_val <- pbias(sim, obs, na.rm = TRUE)
NSE_val <- NSE(sim, obs, na.rm = TRUE)
r_val <- cor(obs, sim, use = "complete.obs")
R2_val <- r_val^2
KGE_val <- KGE_calculator(obs, sim)
# Adicionar os resultados ao dataframe
resultados_metricas <- rbind(resultados_metricas,
data.frame(codigo_OMM = codigo, ME = ME_val, MAE = MAE_val, RMSE = RMSE_val,
PBIAS = PBIAS_val, NSE = NSE_val, r = r_val, R2 = R2_val, KGE = KGE_val))
}
}
# Loop para calcular as métricas para cada estação
for (codigo in names(lista_dados_limpos)) {
# Verificar se a estação está nas duas listas
if (codigo %in% names(lista_dados_CHIRPS)) {
# Extrair os dados para a estação
dados_limpos <- lista_dados_limpos[[codigo]]
dados_chirps <- lista_dados_CHIRPS[[codigo]]
# Unir os dois dataframes pelo mês
dados_combinados <- merge(dados_limpos, dados_chirps, by = "mes", suffixes = c("_limpos", "_CHIRPS"))
# Calcular as métricas
obs <- as.numeric(dados_combinados$precip_total_mensal)
sim <- as.numeric(dados_combinados$precip_total_mensal_CHIRPS)
ME_val <- mean(obs - sim, na.rm = TRUE)
MAE_val <- mae(sim, obs, na.rm = TRUE)
RMSE_val <- rmse(sim, obs, na.rm = TRUE)
PBIAS_val <- pbias(sim, obs, na.rm = TRUE)
NSE_val <- NSE(sim, obs, na.rm = TRUE)
r_val <- cor(obs, sim, use = "complete.obs")
R2_val <- r_val^2
KGE_val <- KGE_calculator(obs, sim)
# Adicionar os resultados ao dataframe
resultados_metricas <- rbind(resultados_metricas,
data.frame(codigo_OMM = codigo, ME = ME_val, MAE = MAE_val, RMSE = RMSE_val,
PBIAS = PBIAS_val, NSE = NSE_val, r = r_val, R2 = R2_val, KGE = KGE_val))
}
}
# Exibir o resultado
print(resultados_metricas)
save.image("RData/RData_etapa4.RData")
View(lista_dados_limpos)
View(lista_dados_limpos[["A618"]])
# Loop para criar um gráfico para cada estação
for (codigo in names(lista_dados_limpos)) {
# Verificar se a estação está nas duas listas
if (codigo %in% names(lista_dados_CHIRPS)) {
# Extrair os dados para a estação
dados_limpos <- lista_dados_limpos[[codigo]]
dados_chirps <- lista_dados_CHIRPS[[codigo]]
# Unir os dois dataframes pelo mês
dados_combinados <- merge(dados_limpos, dados_chirps, by = "mes", suffixes = c("_limpos", "_CHIRPS"))
# Criar o gráfico
p <- ggplot(dados_combinados, aes(x = mes)) +
geom_line(aes(y = precip_total_mensal, color = "Estação"), size = 1) +
geom_line(aes(y = precip_total_mensal_CHIRPS, color = "CHIRPS"), size = 1, linetype = "dashed") +
labs(title = paste("Comparação de Precipitação - Estação:", codigo),
x = "Mês/Ano",
y = "Precipitação Total Mensal (mm)") +
scale_color_manual(values = c("Estação" = "blue", "CHIRPS" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete(labels = function(x) format(as.Date(paste0(x, "-01")), "%Y-%m"))
# Exibir o gráfico
print(p)
}
}
View(dados_combinados)
# Loop para criar um gráfico para cada estação
for (codigo in names(lista_dados_limpos)) {
# Verificar se a estação está nas duas listas
if (codigo %in% names(lista_dados_CHIRPS)) {
# Extrair os dados para a estação
dados_limpos <- lista_dados_limpos[[codigo]]
dados_chirps <- lista_dados_CHIRPS[[codigo]]
# Unir os dois dataframes pelo mês
dados_combinados <- merge(dados_limpos, dados_chirps, by = "mes", suffixes = c("_limpos", "_CHIRPS"))
# Criar o gráfico
p <- ggplot(dados_combinados, aes(x = mes)) +
geom_line(aes(y = precip_total_mensal, color = "Estação"), size = 1) +
geom_line(aes(y = precip_total_mensal_CHIRPS, color = "CHIRPS"), size = 1, linetype = "dashed") +
labs(title = paste("Comparação de Precipitação - Estação:", codigo),
x = "Mês/Ano",
y = "Precipitação Total Mensal (mm)") +
scale_color_manual(values = c("Estação" = "blue", "CHIRPS" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete(labels = function(x) format(as.Date(paste0(x, "-01")), "%Y-%m"))
# Exibir o gráfico
print(p)
}
}
#limpar variaveis
rm(list=ls())
#limpando console
cat("\014")
if (!require('BrazilMet')) install.packages("BrazilMet"); library('BrazilMet')
if (!require('elevatr'))install.packages("elevatr"); library('elevatr')
if (!require('dplyr')) install.packages("dplyr"); library('dplyr')
if (!require('httr')) install.packages("httr"); library('httr')
library(readr)
if (!require('sf')) install.packages("sf"); library('sf')
if (!require('raster')) install.packages("raster"); library('raster')
if (!require('vctrs')) install.packages('vctrs'); library('vctrs')
if (!require('writexl')) install.packages("writexl"); library('writexl')
if (!require('lubridate')) install.packages("lubridate"); library('lubridate')
if (!require('naniar')) install.packages("naniar"); library('naniar')
if (!require('VIM')) install.packages('VIM'); library('VIM')
if (!require('ggplot2')) install.packages("ggplot2"); library('ggplot2')
if (!require('zoo')) install.packages('zoo'); library('zoo')  # Para a função rollmean
load("RData/RData_etapa2.RData")
# Lista para armazenar os dataframes
lista_dados_CHIRPS <- list()
# Loop para percorrer cada estação meteorológica
for (i in 1:nrow(estacoes_filtradas)) {
codigo_estacao <- estacoes_filtradas$OMM[i]  # Código da estação OMM
# Criar um dataframe vazio para essa estação
df_estacao <- data.frame(mes = character(), precip_total_mensal_CHIRPS = numeric(), stringsAsFactors = FALSE)
# Loop para percorrer os arquivos .tif
arquivos_tif <- list.files("DADOS/CHIRPS", pattern = "\\.tif$", full.names = TRUE)
for (arquivo in arquivos_tif) {
# Extrair o ano e mês do nome do arquivo
nome_arquivo <- basename(arquivo)
ano_mes <- sub("chirps-v2.0\\.(\\d{4})\\.(\\d{2})\\.tif", "\\1-\\2", nome_arquivo)
# Carregar o raster e extrair o valor de precipitação para a estação
raster_atual <- raster(arquivo)
valor_precip <- terra::extract(raster_atual, estacoes_filtradas[i, ])
# Adicionar a linha ao dataframe da estação
df_estacao <- rbind(df_estacao, data.frame(mes = ano_mes, precip_total_mensal_CHIRPS = valor_precip))
}
# Adicionar o dataframe na lista, usando o código da estação como nome
lista_dados_CHIRPS[[codigo_estacao]] <- df_estacao
}
plot(raster_atual)
#limpar variaveis
rm(list=ls())
#limpando console
cat("\014")
if (!require('BrazilMet')) install.packages("BrazilMet"); library('BrazilMet')
if (!require('elevatr'))install.packages("elevatr"); library('elevatr')
if (!require('dplyr')) install.packages("dplyr"); library('dplyr')
if (!require('httr')) install.packages("httr"); library('httr')
library(readr)
if (!require('sf')) install.packages("sf"); library('sf')
if (!require('raster')) install.packages("raster"); library('raster')
if (!require('vctrs')) install.packages('vctrs'); library('vctrs')
if (!require('writexl')) install.packages("writexl"); library('writexl')
if (!require('lubridate')) install.packages("lubridate"); library('lubridate')
if (!require('naniar')) install.packages("naniar"); library('naniar')
if (!require('VIM')) install.packages('VIM'); library('VIM')
if (!require('ggplot2')) install.packages("ggplot2"); library('ggplot2')
if (!require('zoo')) install.packages('zoo'); library('zoo')  # Para a função rollmean
if (!require('hydroGOF')) install.packages('hydroGOF'); library('hydroGOF') # Para algumas das métricas
load("RData/RData_etapa3.RData")
# Criar uma lista para armazenar os resultados
resultados_metricas <- data.frame(codigo_OMM = character(),
ME = numeric(), MAE = numeric(), RMSE = numeric(),
PBIAS = numeric(), NSE = numeric(),
r = numeric(), R2 = numeric(), KGE = numeric(),
stringsAsFactors = FALSE)
# Função para calcular KGE
KGE_calculator <- function(obs, sim) {
return(hydroGOF::KGE(sim, obs))
}
# Loop para calcular as métricas para cada estação
for (codigo in names(lista_dados_limpos)) {
# Verificar se a estação está nas duas listas
if (codigo %in% names(lista_dados_CHIRPS)) {
# Extrair os dados para a estação
dados_limpos <- lista_dados_limpos[[codigo]]
dados_chirps <- lista_dados_CHIRPS[[codigo]]
# Unir os dois dataframes pelo mês
dados_combinados <- merge(dados_limpos, dados_chirps, by = "mes", suffixes = c("_limpos", "_CHIRPS"))
# Calcular as métricas
obs <- as.numeric(dados_combinados$precip_total_mensal)
sim <- as.numeric(dados_combinados$precip_total_mensal_CHIRPS)
ME_val <- mean(obs - sim, na.rm = TRUE)
MAE_val <- mae(sim, obs, na.rm = TRUE)
RMSE_val <- rmse(sim, obs, na.rm = TRUE)
PBIAS_val <- pbias(sim, obs, na.rm = TRUE)
NSE_val <- NSE(sim, obs, na.rm = TRUE)
r_val <- cor(obs, sim, use = "complete.obs")
R2_val <- r_val^2
KGE_val <- KGE_calculator(obs, sim)
# Adicionar os resultados ao dataframe
resultados_metricas <- rbind(resultados_metricas,
data.frame(codigo_OMM = codigo, ME = ME_val, MAE = MAE_val, RMSE = RMSE_val,
PBIAS = PBIAS_val, NSE = NSE_val, r = r_val, R2 = R2_val, KGE = KGE_val))
}
}
# Exibir o resultado
print(resultados_metricas)
View(lista_dados_CHIRPS)
View(lista_dados_CHIRPS[["A618"]])
p <- ggplot(lista_dados_limpos[["618$mes"]], aes(x = mes)) +
geom_line(aes(y = precip_total_mensal, color = "Estação"), size = 1)
p <- ggplot(lista_dados_limpos[["618$mes"]], aes(x = mes)) +
geom_line(aes(y = precip_total_mensal, color = "Estação"), linewidth = 1)
p <- ggplot(lista_dados_limpos[["618$mes"]], aes(x = mes)) +
geom_line(aes(y = precip_total_mensal, color = "Estação"), linewidth = 1)
ggplot(lista_dados_limpos[["618$mes"]], aes(x = mes)) +
geom_line(aes(y = precip_total_mensal, color = "Estação"), linewidth = 1)
ggplot(lista_dados_limpos[["618$mes"]], aes(x = mes))
# Loop para criar um gráfico para cada estação
for (codigo in names(lista_dados_limpos)) {
# Verificar se a estação está nas duas listas
if (codigo %in% names(lista_dados_CHIRPS)) {
# Extrair os dados para a estação
dados_limpos <- lista_dados_limpos[[codigo]]
dados_chirps <- lista_dados_CHIRPS[[codigo]]
# Unir os dois dataframes pelo mês
dados_combinados <- merge(dados_limpos, dados_chirps, by = "mes", suffixes = c("_limpos", "_CHIRPS"))
# Criar o gráfico
p <- ggplot(dados_combinados, aes(x = mes)) +
geom_line(aes(y = precip_total_mensal, color = "Estação"), size = 1) +
geom_line(aes(y = precip_total_mensal_CHIRPS, color = "CHIRPS"), size = 1, linetype = "dashed") +
labs(title = paste("Comparação de Precipitação - Estação:", codigo),
x = "Mês/Ano",
y = "Precipitação Total Mensal (mm)") +
scale_color_manual(values = c("Estação" = "blue", "CHIRPS" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete(labels = function(x) format(as.Date(paste0(x, "-01")), "%Y-%m"))
# Exibir o gráfico
print(p)
}
}
# Loop para criar um gráfico para cada estação
for (codigo in names(lista_dados_limpos)) {
# Verificar se a estação está nas duas listas
if (codigo %in% names(lista_dados_CHIRPS)) {
# Extrair os dados para a estação
dados_limpos <- lista_dados_limpos[[codigo]]
dados_chirps <- lista_dados_CHIRPS[[codigo]]
# Unir os dois dataframes pelo mês
dados_combinados <- merge(dados_limpos, dados_chirps, by = "mes", suffixes = c("_limpos", "_CHIRPS"))
# Criar o gráfico
p <- ggplot(dados_combinados, aes(x = mes, group = 1)) +
geom_line(aes(y = precip_total_mensal, color = "Estação"), size = 1) +
geom_line(aes(y = precip_total_mensal_CHIRPS, color = "CHIRPS"), size = 1, linetype = "dashed") +
labs(title = paste("Comparação de Precipitação - Estação:", codigo),
x = "Mês/Ano",
y = "Precipitação Total Mensal (mm)") +
scale_color_manual(values = c("Estação" = "blue", "CHIRPS" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete(labels = function(x) format(as.Date(paste0(x, "-01")), "%Y-%m"))
# Exibir o gráfico
print(p)
}
}
save.image("RData/RData_etapa4.RData")
# Exibir o resultado
print(resultados_metricas)
# Loop para criar um gráfico para cada estação
for (codigo in names(lista_dados_limpos)) {
# Verificar se a estação está nas duas listas
if (codigo %in% names(lista_dados_CHIRPS)) {
# Extrair os dados para a estação
dados_limpos <- lista_dados_limpos[[codigo]]
dados_chirps <- lista_dados_CHIRPS[[codigo]]
# Unir os dois dataframes pelo mês
dados_combinados <- merge(dados_limpos, dados_chirps, by = "mes", suffixes = c("_limpos", "_CHIRPS"))
# Criar o gráfico
p <- ggplot(dados_combinados, aes(x = mes, group = 1)) +
geom_line(aes(y = precip_total_mensal, color = "Estação"), size = 1) +
geom_line(aes(y = precip_total_mensal_CHIRPS, color = "CHIRPS"), size = 1, linetype = "dashed") +
labs(title = paste("Comparação de Precipitação - Estação:", codigo),
x = "Mês/Ano",
y = "Precipitação Total Mensal (mm)") +
scale_color_manual(values = c("Estação" = "blue", "CHIRPS" = "red")) +
theme_minimal() +
#theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete(labels = function(x) format(as.Date(paste0(x, "-01")), "%Y-%m"))
# Exibir o gráfico
print(p)
}
}
# Loop para criar um gráfico para cada estação
for (codigo in names(lista_dados_limpos)) {
# Verificar se a estação está nas duas listas
if (codigo %in% names(lista_dados_CHIRPS)) {
# Extrair os dados para a estação
dados_limpos <- lista_dados_limpos[[codigo]]
dados_chirps <- lista_dados_CHIRPS[[codigo]]
# Unir os dois dataframes pelo mês
dados_combinados <- merge(dados_limpos, dados_chirps, by = "mes", suffixes = c("_limpos", "_CHIRPS"))
# Criar o gráfico
p <- ggplot(dados_combinados, aes(x = mes, group = 1)) +
geom_line(aes(y = precip_total_mensal, color = "Estação"), size = 1) +
geom_line(aes(y = precip_total_mensal_CHIRPS, color = "CHIRPS"), size = 1, linetype = "dashed") +
labs(title = paste("Comparação de Precipitação - Estação:", codigo),
x = "Mês/Ano",
y = "Precipitação Total Mensal (mm)") +
scale_color_manual(values = c("Estação" = "blue", "CHIRPS" = "red")) +
theme_minimal() +
#theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
#scale_x_discrete(labels = function(x) format(as.Date(paste0(x, "-01")), "%Y-%m"))
# Exibir o gráfico
print(p)
}
}
# Loop para criar um gráfico para cada estação
for (codigo in names(lista_dados_limpos)) {
# Verificar se a estação está nas duas listas
if (codigo %in% names(lista_dados_CHIRPS)) {
# Extrair os dados para a estação
dados_limpos <- lista_dados_limpos[[codigo]]
dados_chirps <- lista_dados_CHIRPS[[codigo]]
# Unir os dois dataframes pelo mês
dados_combinados <- merge(dados_limpos, dados_chirps, by = "mes", suffixes = c("_limpos", "_CHIRPS"))
# Criar o gráfico
p <- ggplot(dados_combinados, aes(x = mes, group = 1)) +
geom_line(aes(y = precip_total_mensal, color = "Estação"), size = 1) +
geom_line(aes(y = precip_total_mensal_CHIRPS, color = "CHIRPS"), size = 1, linetype = "dashed") +
labs(title = paste("Comparação de Precipitação - Estação:", codigo),
x = "Mês/Ano",
y = "Precipitação Total Mensal (mm)") +
scale_color_manual(values = c("Estação" = "blue", "CHIRPS" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = .1)) +
scale_x_discrete(labels = function(x) format(as.Date(paste0(x, "-01")), "%Y-%m"))
# Exibir o gráfico
print(p)
}
}
# Loop para criar um gráfico para cada estação
for (codigo in names(lista_dados_limpos)) {
# Verificar se a estação está nas duas listas
if (codigo %in% names(lista_dados_CHIRPS)) {
# Extrair os dados para a estação
dados_limpos <- lista_dados_limpos[[codigo]]
dados_chirps <- lista_dados_CHIRPS[[codigo]]
# Unir os dois dataframes pelo mês
dados_combinados <- merge(dados_limpos, dados_chirps, by = "mes", suffixes = c("_limpos", "_CHIRPS"))
# Criar o gráfico
p <- ggplot(dados_combinados, aes(x = mes, group = 1)) +
geom_line(aes(y = precip_total_mensal, color = "Estação"), size = 1) +
geom_line(aes(y = precip_total_mensal_CHIRPS, color = "CHIRPS"), size = 1, linetype = "dashed") +
labs(title = paste("Comparação de Precipitação - Estação:", codigo),
x = "Mês/Ano",
y = "Precipitação Total Mensal (mm)") +
scale_color_manual(values = c("Estação" = "blue", "CHIRPS" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = .05)) +
scale_x_discrete(labels = function(x) format(as.Date(paste0(x, "-01")), "%Y-%m"))
# Exibir o gráfico
print(p)
}
}
# Loop para criar um gráfico para cada estação
for (codigo in names(lista_dados_limpos)) {
# Verificar se a estação está nas duas listas
if (codigo %in% names(lista_dados_CHIRPS)) {
# Extrair os dados para a estação
dados_limpos <- lista_dados_limpos[[codigo]]
dados_chirps <- lista_dados_CHIRPS[[codigo]]
# Unir os dois dataframes pelo mês
dados_combinados <- merge(dados_limpos, dados_chirps, by = "mes", suffixes = c("_limpos", "_CHIRPS"))
# Criar o gráfico
p <- ggplot(dados_combinados, aes(x = mes, group = 1)) +
geom_line(aes(y = precip_total_mensal, color = "Estação"), size = 1) +
geom_line(aes(y = precip_total_mensal_CHIRPS, color = "CHIRPS"), size = 1, linetype = "dashed") +
labs(title = paste("Comparação de Precipitação - Estação:", codigo),
x = "Mês/Ano",
y = "Precipitação Total Mensal (mm)") +
scale_color_manual(values = c("Estação" = "blue", "CHIRPS" = "red")) +
#theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = .05)) +
scale_x_discrete(labels = function(x) format(as.Date(paste0(x, "-01")), "%Y-%m"))
# Exibir o gráfico
print(p)
}
}
# Loop para criar um gráfico para cada estação
for (codigo in names(lista_dados_limpos)) {
# Verificar se a estação está nas duas listas
if (codigo %in% names(lista_dados_CHIRPS)) {
# Extrair os dados para a estação
dados_limpos <- lista_dados_limpos[[codigo]]
dados_chirps <- lista_dados_CHIRPS[[codigo]]
# Unir os dois dataframes pelo mês
dados_combinados <- merge(dados_limpos, dados_chirps, by = "mes", suffixes = c("_limpos", "_CHIRPS"))
# Criar o gráfico
p <- ggplot(dados_combinados, aes(x = mes, group = 1)) +
geom_line(aes(y = precip_total_mensal, color = "Estação"), size = 1) +
geom_line(aes(y = precip_total_mensal_CHIRPS, color = "CHIRPS"), size = 1, linetype = "dashed") +
labs(title = paste("Comparação de Precipitação - Estação:", codigo),
x = "Mês/Ano",
y = "Precipitação Total Mensal (mm)") +
scale_color_manual(values = c("Estação" = "blue", "CHIRPS" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = .02)) +
scale_x_discrete(labels = function(x) format(as.Date(paste0(x, "-01")), "%Y-%m"))
# Exibir o gráfico
print(p)
}
}
# Loop para criar um gráfico para cada estação
for (codigo in names(lista_dados_limpos)) {
# Verificar se a estação está nas duas listas
if (codigo %in% names(lista_dados_CHIRPS)) {
# Extrair os dados para a estação
dados_limpos <- lista_dados_limpos[[codigo]]
dados_chirps <- lista_dados_CHIRPS[[codigo]]
# Unir os dois dataframes pelo mês
dados_combinados <- merge(dados_limpos, dados_chirps, by = "mes", suffixes = c("_limpos", "_CHIRPS"))
# Criar o gráfico
p <- ggplot(dados_combinados, aes(x = mes, group = 1)) +
geom_line(aes(y = precip_total_mensal, color = "Estação"), size = 1) +
geom_line(aes(y = precip_total_mensal_CHIRPS, color = "CHIRPS"), size = 1, linetype = "dashed") +
labs(title = paste("Estação:", codigo),
x = "Mês/Ano",
y = "Precipitação Total Mensal (mm)") +
scale_color_manual(values = c("Estação" = "blue", "CHIRPS" = "red")) +
theme_minimal() +
theme(axis.text.x = element_blank(), # Remove os rótulos do eixo X
axis.ticks.x = element_blank()) # Remove os ticks do eixo X
# Exibir o gráfico
print(p)
}
}
# Exibir o resultado
print(resultados_metricas)
